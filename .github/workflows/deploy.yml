name: Build and Deploy to Remote MicroK8s

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Export Environment Variables
      run: |
        export DB_URL=${{ secrets.DB_URL }}
        export DB_USERNAME=${{ secrets.DB_USERNAME }}
        export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
        export CORS_URL=${{ secrets.CORS_URL }}
        echo "Environment variables exported successfully"

    - name: Build with Maven
      run: |
        export DB_URL=${{ secrets.DB_URL }}
        export DB_USERNAME=${{ secrets.DB_USERNAME }}
        export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
        export CORS_URL=${{ secrets.CORS_URL }}
        mvn clean package

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: docker build -t lavanjv/city-search-be:latest .

    - name: Push Docker Image
      run: docker push lavanjv/city-search-be:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Copy deployment.yaml to Remote Server
      uses: appleboy/scp-action@v0.1.6
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        password: ${{ secrets.REMOTE_PASSWORD }}
        source: ./k8s/deployment.yaml
        target: ~/k8s/

    - name: SSH and Deploy to MicroK8s
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        password: ${{ secrets.REMOTE_PASSWORD }}
        port: 22
        script: |
          echo "Logging into the server..."

          echo "Deleting existing k8s directory if present..."
          if [ -d ~/k8s ]; then
            rm -rf ~/k8s
            echo "k8s directory deleted."
          else
            echo "No existing k8s directory found."
          fi

          echo "Recreating k8s directory and keeping deployment.yaml intact..."
          mkdir -p ~/k8s

          echo "Checking for processes running on port 6543..."
          PID=$(lsof -t -i:6543 || echo "")
          if [ -n "$PID" ]; then
            echo "Killing process with PID: $PID"
            kill -9 $PID
          else
            echo "No process found running on port 6543."
          fi

          echo "Starting MicroK8s..."
          echo ${{ secrets.REMOTE_PASSWORD }} | sudo -S microk8s start || { echo "Failed to start MicroK8s."; exit 1; }

          echo "Creating Kubernetes Secret..."
          echo ${{ secrets.REMOTE_PASSWORD }} | sudo -S microk8s kubectl create secret generic city-search-be-secret \
            --from-literal=DB_URL="${{ secrets.DB_URL }}" \
            --from-literal=DB_USERNAME="${{ secrets.DB_USERNAME }}" \
            --from-literal=DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            --from-literal=CORS_URL="${{ secrets.CORS_URL }}" \
            --dry-run=client -o yaml | sudo microk8s kubectl apply -f -

          echo "Applying Deployment..."
          echo ${{ secrets.REMOTE_PASSWORD }} | sudo -S microk8s kubectl apply -f ~/k8s/deployment.yaml || { echo "Failed to apply deployment."; exit 1; }

          echo "Deployment completed!"
